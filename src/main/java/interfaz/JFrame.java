package interfaz;

import java.awt.Color;
import java.time.LocalDate;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import logica.Bungalow;
import logica.Camping;
import ficheros.Ficheros;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;

/**
 * Interfaz visual del programa de gestión de camping
 * @author Rubén Abellón
 * @version 1.0
 */
public class JFrame extends javax.swing.JFrame {

        private JButton tablero[][];
        
    /**
     * JFrame principal
     */
    public JFrame() {
        initComponents();
        setLocationRelativeTo(null);
        Ficheros.cargarParametros();
        Ficheros.cargarEstado();
        
        //-------- Crear los botones --------
        tablero = new JButton[10][8];
        int cont = 1;
        
        for (int f = 0; f < 10; f++) {
            for (int c = 0; c < 8; c++) {
                tablero[f][c] = new JButton();
                tablero[f][c].setFont(new java.awt.Font("Calibri", 1, 16));
                tablero[f][c].setForeground(new Color(255, 255, 255));
                tablero[f][c].addMouseListener(new java.awt.event.MouseAdapter() {
                    @Override
                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                        FActionPerformed(evt);
                    }
                });
                tablero[f][c].setName(String.valueOf(cont));
                if(Camping.parcelas.get(cont - 1).estaLibre()) tablero[f][c].setBackground(new Color(4, 116, 214));
                else tablero[f][c].setBackground(new Color(145, 25, 25));
                tablero[f][c].setText(String.valueOf(cont));
                tablero[f][c].setSize(130, 85);
                if(f == 0 || (f == 1 && c <= 1)){
                    tablero[f][c].setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/tienda.png")));
                }
                if(f == 2 || (f == 1 && c >= 2) || (f == 3 && c <= 5)){
                    tablero[f][c].setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/caravana.png")));
                }
                if(f >= 4 || (f == 3 && c >= 6)){
                    tablero[f][c].setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/bungalow.png")));
                }
                cont++;
                jPanelCuerpo.add(tablero[f][c]);
            }
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanelCuerpo = new javax.swing.JPanel();
        jPanelBotonera = new javax.swing.JPanel();
        jButtonParam = new javax.swing.JButton();
        jButtonAyuda = new javax.swing.JButton();
        jButtonAbout = new javax.swing.JButton();
        jButtonSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestión Camping");
        setPreferredSize(new java.awt.Dimension(1048, 980));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(1048, 60));

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(4, 116, 214));
        jLabel1.setText("Camping del Sol");
        jPanel1.add(jLabel1);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jPanelCuerpo.setBackground(new java.awt.Color(255, 255, 255));
        jPanelCuerpo.setPreferredSize(new java.awt.Dimension(1048, 860));
        jPanelCuerpo.setLayout(new java.awt.GridLayout(10, 8, 1, 1));
        getContentPane().add(jPanelCuerpo, java.awt.BorderLayout.CENTER);

        jPanelBotonera.setPreferredSize(new java.awt.Dimension(1048, 40));

        jButtonParam.setText("Parametros");
        jButtonParam.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonParam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonParamActionPerformed(evt);
            }
        });
        jPanelBotonera.add(jButtonParam);

        jButtonAyuda.setText("Ayuda");
        jButtonAyuda.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonAyuda.setMaximumSize(new java.awt.Dimension(89, 23));
        jButtonAyuda.setMinimumSize(new java.awt.Dimension(89, 23));
        jButtonAyuda.setPreferredSize(new java.awt.Dimension(89, 23));
        jButtonAyuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAyudaActionPerformed(evt);
            }
        });
        jPanelBotonera.add(jButtonAyuda);

        jButtonAbout.setText("About");
        jButtonAbout.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonAbout.setMaximumSize(new java.awt.Dimension(89, 23));
        jButtonAbout.setMinimumSize(new java.awt.Dimension(89, 23));
        jButtonAbout.setPreferredSize(new java.awt.Dimension(89, 23));
        jButtonAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAboutActionPerformed(evt);
            }
        });
        jPanelBotonera.add(jButtonAbout);

        jButtonSalir.setText("Salir");
        jButtonSalir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonSalir.setMaximumSize(new java.awt.Dimension(89, 23));
        jButtonSalir.setMinimumSize(new java.awt.Dimension(89, 23));
        jButtonSalir.setName(""); // NOI18N
        jButtonSalir.setPreferredSize(new java.awt.Dimension(89, 23));
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });
        jPanelBotonera.add(jButtonSalir);

        getContentPane().add(jPanelBotonera, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButtonSalirActionPerformed

    private void jButtonParamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonParamActionPerformed
        int opc = JOptionPane.showConfirmDialog(rootPane, "Edita el archivo 'parametros.txt' que está en la carpeta 'data' de la aplicación para cambiar los parámetros.\n"
                + "Una vez realizados los cambios en el fichero guardalo y pulsa 'Si' para que se cargen los nuevos parámetros");
        if(opc == 0){
            Ficheros.cargarParametros();
        }
    }//GEN-LAST:event_jButtonParamActionPerformed

    private void jButtonAyudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAyudaActionPerformed
        if (Desktop.isDesktopSupported()) {
            try {
                File myFile = new File("data"+File.separator+"Manual.pdf");
                Desktop.getDesktop().open(myFile);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(rootPane, "No se ha podido abrir el manual", "Alerta",JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonAyudaActionPerformed

    private void jButtonAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAboutActionPerformed
        JOptionPane.showMessageDialog(rootPane, "Autor de la aplicación: Rubén Abellón\nVersión: 1.0\nGitHub: @rubeneso", "About",JOptionPane.INFORMATION_MESSAGE);
        
    }//GEN-LAST:event_jButtonAboutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrame().setVisible(true);
            }
        });
    }
    
    private void FActionPerformed(java.awt.event.MouseEvent evt) {
        int num = Integer.parseInt(((JButton) evt.getSource()).getName());
        if(Camping.parcelas.get(num - 1).estaLibre()){
            //-------- Check In --------
            String dni = JOptionPane.showInputDialog(rootPane, "Introduce el DNI del huésped", "Introducir DNI",  JOptionPane.INFORMATION_MESSAGE);
            //-------- Si se cancela a la hora de introducir el DNI no se hace el Check In --------
            if(dni != null){
                try{
                if(!comprobarDni(dni)) JOptionPane.showMessageDialog(rootPane, "El DNI introducido es incorrecto", "Alerta",JOptionPane.INFORMATION_MESSAGE);
                else{
                    if(Camping.parcelas.get(num - 1).getClass().getName().equals("logica.Bungalow")){
                        //-------- Datos para parcela tipo Bungalow --------
                        String nH = JOptionPane.showInputDialog(rootPane, "Introduce número de huéspedes", "Introducir Datos",  JOptionPane.INFORMATION_MESSAGE);
                        String nM = JOptionPane.showInputDialog(rootPane, "Introduce número de huéspedes que son menores de edad", "Introducir Datos",  JOptionPane.INFORMATION_MESSAGE);
                        int nHuespedes = Integer.parseInt(nH);
                        int nMenores = Integer.parseInt(nM);
                        //-------- Si el check in devuelve true marcamos como ocupada y guardamos el estado --------
                        if(((Bungalow) Camping.parcelas.get(num - 1)).checkIn(dni, nHuespedes, nMenores)){
                            ((JButton) evt.getSource()).setBackground(new Color(145, 25, 25));
                            Ficheros.guardarEstado();
                        }
                        else JOptionPane.showMessageDialog(rootPane, "No se ha podido hacer el check in", "Alerta",JOptionPane.INFORMATION_MESSAGE);
                    }
                    else{
                    //-------- Datos para tiendas de campaña y caravanas --------
                        if(Camping.parcelas.get(num - 1).checkIn(dni)){
                            ((JButton) evt.getSource()).setBackground(new Color(145, 25, 25));
                            Ficheros.guardarEstado();
                        }
                        else JOptionPane.showMessageDialog(rootPane, "No se ha podido hacer el check in", "Alerta",JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            }
            catch(NumberFormatException ex){
                JOptionPane.showMessageDialog(rootPane, "Error al introducir algún dato", "Alerta",JOptionPane.INFORMATION_MESSAGE);
            }
            }
        }
        else{
            //-------- Check out --------
            double coste = Camping.parcelas.get(num - 1).checkOut();
            if(coste == -2) JOptionPane.showMessageDialog(rootPane, "No se puede hacer el check out porque no ha transcurrido el tiempo mínimo de estadía", "Error de check out",JOptionPane.INFORMATION_MESSAGE);
            else{
                //-------- Sacar los datos para facturar
                String dni = Camping.parcelas.get(num - 1).getDniHuesped();
                String fEntrada = String.valueOf(Camping.parcelas.get(num - 1).getfEntrada());
                String tipoParcela = Camping.parcelas.get(num - 1).getClass().getName().substring(7);
                //-------- Facturar --------
                Ficheros.facturar(dni+";"+num+";"+tipoParcela+";"+fEntrada+";"+LocalDate.now()+";"+coste);
                JOptionPane.showMessageDialog(rootPane, "El importe a cobrar son "+coste+"€", "Información Check Out",JOptionPane.INFORMATION_MESSAGE);
                //-------- Marcar la parcela como libre y guardar el estado --------
                ((JButton) evt.getSource()).setBackground(new Color(4, 116, 214));
                Ficheros.guardarEstado();
            }
            
        }
        
    }
    private boolean comprobarDni(String dni){
        if(dni.length() != 9) return false;
        String letrasDni="TRWAGMYFPDXBNJZSQVHLCKE";
        int restoDni;
        int numDni = Integer.parseInt(dni.substring(0, 8));
        char letra;
        char letraDni = 'a';
        restoDni  = numDni % 23;
        for(int i=0;i<=22;i++){
            letra = letrasDni.charAt(i);
            if(restoDni==i){
                letraDni = letra;
            }
        }
        char letraRecibida = Character.toUpperCase(dni.charAt(8));
        if(letraDni == letraRecibida) return true;
        else return false;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAbout;
    private javax.swing.JButton jButtonAyuda;
    private javax.swing.JButton jButtonParam;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelBotonera;
    private javax.swing.JPanel jPanelCuerpo;
    // End of variables declaration//GEN-END:variables
}
